import streamlit as st
import random

# -----------------------------
# Session State Initialization
# -----------------------------
if "players" not in st.session_state:
    st.session_state.players = []
if "teams" not in st.session_state:
    st.session_state.teams = []
if "current_match" not in st.session_state:
    st.session_state.current_match = None
if "winner_streak" not in st.session_state:
    st.session_state.winner_streak = {"team": None, "count": 0, "first_loser": None}
if "history" not in st.session_state:
    st.session_state.history = []
if "queue" not in st.session_state:
    st.session_state.queue = []
if "stats" not in st.session_state:
    st.session_state.stats = {}

# -----------------------------
# Helper Functions
# -----------------------------
def init_stats(players):
    st.session_state.stats = {p: {"played": 0, "win": 0} for p in players}

def make_teams(players):
    """‡∏™‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡∏° (‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà ‡πÉ‡∏´‡πâ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ô‡∏±‡πà‡∏á‡∏û‡∏±‡∏Å)"""
    players = players[:]
    random.shuffle(players)
    if len(players) % 2 == 1:
        rest = players.pop()   # ‡∏Ñ‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏û‡∏±‡∏Å
        st.info(f"üë§ {rest} ‡∏û‡∏±‡∏Å‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ")
    teams = [players[i:i+2] for i in range(0, len(players), 2)]
    return teams

def start_new_round():
    teams = make_teams(st.session_state.players)
    st.session_state.teams = teams
    st.session_state.queue = teams[2:] if len(teams) > 2 else []
    if len(teams) >= 2:
        st.session_state.current_match = (teams[0], teams[1])
    else:
        st.session_state.current_match = None
    st.session_state.winner_streak = {"team": None, "count": 0, "first_loser": None}
    st.session_state.history = []

def update_stats(players, winner=False):
    for p in players:
        st.session_state.stats[p]["played"] += 1
        if winner:
            st.session_state.stats[p]["win"] += 1

def process_result(winner_side):
    team_left, team_right = st.session_state.current_match
    winner = team_left if winner_side == "left" else team_right
    loser = team_right if winner_side == "left" else team_left

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô
    st.session_state.history.append(
        f"{' & '.join(winner)} ‚úÖ ‡∏ä‡∏ô‡∏∞ {' & '.join(loser)} ‚ùå"
    )

    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    update_stats(winner, winner=True)
    update_stats(loser, winner=False)

    # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï streak
    if st.session_state.winner_streak["team"] == winner:
        st.session_state.winner_streak["count"] += 1
    else:
        st.session_state.winner_streak = {"team": winner, "count": 1, "first_loser": loser}

    # ‡∏ñ‡πâ‡∏≤‡∏ä‡∏ô‡∏∞ 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡∏¥‡∏î
    if st.session_state.winner_streak["count"] == 2:
        if st.session_state.queue:
            next_team = st.session_state.queue.pop(0)
            st.session_state.current_match = (
                st.session_state.winner_streak["first_loser"],
                next_team,
            )
        else:
            start_new_round()
    else:
        if st.session_state.queue:
            next_team = st.session_state.queue.pop(0)
            st.session_state.current_match = (winner, next_team)
        else:
            start_new_round()

    # üîÑ Refresh ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    st.rerun()

# -----------------------------
# UI
# -----------------------------
st.title("üè∏ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡πÅ‡∏ö‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏±‡∏ô")

# ‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
st.subheader("‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 16 ‡∏Ñ‡∏ô)")
names_input = st.text_area(
    "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ (‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô)", 
    "‡∏ß‡∏¥‡∏ô\n‡πÇ‡∏ï‡πä‡∏î\n‡∏ï‡∏¥‡∏ô\n‡∏ï‡πà‡∏≠\n‡∏°‡∏∏‡∏Å\n‡πÄ‡∏ü‡∏¥‡∏£‡πå‡∏ô\n‡∏Å‡∏±‡∏ô‡∏î‡∏±‡πâ‡∏°\n‡πÇ‡∏Å‡πâ"
)
players = [n.strip() for n in names_input.split("\n") if n.strip()]

col_start, col_reset = st.columns(2)
with col_start:
    if st.button("‚ñ∂Ô∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà"):
        if len(players) < 4:
            st.error("‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 4 ‡∏Ñ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ")
        else:
            st.session_state.players = players
            init_stats(players)
            start_new_round()
            st.success("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")

with col_reset:
    if st.button("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"):
        for key in list(st.session_state.keys()):
            del st.session_state[key]
        st.rerun()

# ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
if st.session_state.current_match:
    team_left, team_right = st.sessi

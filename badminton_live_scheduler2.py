import streamlit as st
import random

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô reset ‡πÄ‡∏Å‡∏°
def reset_game():
    players = [p.strip() for p in st.session_state.player_input.split("\n") if p.strip()]
    st.session_state.players = players

    # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà ‡πÉ‡∏´‡πâ 1 ‡∏Ñ‡∏ô‡∏û‡∏±‡∏Å‡∏Å‡πà‡∏≠‡∏ô
    if len(players) % 2 == 1:
        st.session_state.resting_player = players[-1]
        st.session_state.active_players = players[:-1]
    else:
        st.session_state.resting_player = None
        st.session_state.active_players = players[:]

    shuffled = st.session_state.active_players[:]
    random.shuffle(shuffled)
    st.session_state.teams = [shuffled[i:i+2] for i in range(0, len(shuffled), 2)]
    st.session_state.current_team = st.session_state.teams[0]
    st.session_state.queue = st.session_state.teams[1:]
    st.session_state.streak = {}
    st.session_state.match_no = 1
    st.session_state.history = []
    st.session_state.last_winner = None
    st.session_state.loser_pool = []

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô session_state
if "players" not in st.session_state:
    st.session_state.players = []
    st.session_state.player_input = ""

st.title("üè∏ Badminton Live Scheduler")

# ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
st.subheader("‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 16 ‡∏Ñ‡∏ô)")
st.session_state.player_input = st.text_area(
    "‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î:",
    st.session_state.player_input,
    height=200
)

if st.button("‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà"):
    if st.session_state.player_input.strip() == "":
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°")
    else:
        reset_game()
        st.success("‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß
if st.session_state.players:
    st.subheader("‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô")
    for i, p in enumerate(st.session_state.players, 1):
        if st.session_state.resting_player == p:
            st.write(f"{i}. {p} (‡∏û‡∏±‡∏Å‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ)")
        else:
            st.write(f"{i}. {p}")

    st.subheader("‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ")
    for i, t in enumerate(st.session_state.teams, 1):
        st.write(f"‡∏ó‡∏µ‡∏° {i}: {t[0]} + {t[1]}")

    # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ó‡∏µ‡∏°‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    if st.session_state.queue and st.session_state.current_team:
        challenger = st.session_state.queue[0]
        st.markdown(f"### ‡πÅ‡∏°‡∏ï‡∏ä‡πå {st.session_state.match_no}")
        st.write(f"{st.session_state.current_team[0]} + {st.session_state.current_team[1]}  VS  {challenger[0]} + {challenger[1]}")

        col1, col2, col3 = st.columns(3)
        win_choice = None
        if col1.button("‡∏ó‡∏µ‡∏°‡∏ã‡πâ‡∏≤‡∏¢‡∏ä‡∏ô‡∏∞ ‚úÖ", key=f"left_{st.session_state.match_no}"):
            win_choice = "current"
        if col2.button("‡∏ó‡∏µ‡∏°‡∏Ç‡∏ß‡∏≤‡∏ä‡∏ô‡∏∞ ‚úÖ", key=f"right_{st.session_state.match_no}"):
            win_choice = "challenger"
        if col3.button("‚û°Ô∏è ‡∏ï‡πà‡∏≠‡πÑ‡∏õ", key=f"next_{st.session_state.match_no}"):
            win_choice = st.session_state.last_winner

        if win_choice:
            if win_choice == "current":
                winner = st.session_state.current_team
                loser = challenger
                st.session_state.loser_pool.append(challenger)
            elif win_choice == "challenger":
                winner = challenger
                loser = st.session_state.current_team
                st.session_state.loser_pool.append(st.session_state.current_team)
                st.session_state.current_team = challenger
            else:
                winner = None
                loser = None

            if winner:
                key = "+".join(winner)
                st.session_state.streak[key] = st.session_state.streak.get(key, 0) + 1
                st.success(f"‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞: {winner[0]} + {winner[1]} (‡∏ä‡∏ô‡∏∞‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô {st.session_state.streak[key]} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á)")

                # ‡πÄ‡∏Å‡πá‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô
                st.session_state.history.append({
                    "‡πÅ‡∏°‡∏ï‡∏ä‡πå": st.session_state.match_no,
                    "‡∏ó‡∏µ‡∏°‡∏ä‡∏ô‡∏∞": f"{winner[0]} + {winner[1]}",
                    "‡∏ó‡∏µ‡∏°‡πÅ‡∏û‡πâ": f"{loser[0]} + {loser[1]}"
                })

                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                st.session_state.last_winner = win_choice

                # ‡∏ñ‡πâ‡∏≤‡∏ä‡∏ô‡∏∞‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚Üí ‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏û‡∏±‡∏Å ‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏û‡πâ‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å
                if st.session_state.streak[key] >= 2:
                    st.warning(f"‡∏ó‡∏µ‡∏° {winner[0]}+{winner[1]} ‡∏ä‡∏ô‡∏∞ 2 ‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏ï‡∏¥‡∏î ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏£‡∏≠‡∏Å‡πà‡∏≠‡∏ô!")

                    if st.session_state.queue:
                        st.session_state.current_team = st.session_state.queue.pop(0)
                        if st.session_state.loser_pool:
                            st.session_state.queue.insert(0, st.session_state.loser_pool.pop(0))
                    else:
                        st.session_state.current_team = None
                else:
                    st.session_state.queue.pop(0)

                # ‡πÑ‡∏õ‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                st.session_state.match_no += 1

                # ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡∏´‡∏°‡∏î = ‡∏Ñ‡∏£‡∏ö‡∏£‡∏≠‡∏ö ‚Üí ‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà
                if not st.session_state.queue:
                    # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏û‡∏±‡∏Å ‚Üí ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ active
                    if st.session_state.resting_player:
                        st.session_state.active_players.append(st.session_state.resting_player)
                        st.session_state.resting_player = None

                    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏û‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà
                    if len(st.session_state.players) % 2 == 1:
                        st.session_state.resting_player = random.choice(st.session_state.active_players)
                        st.session_state.active_players.remove(st.session_state.resting_player)

                    shuffled = st.session_state.active_players[:]
                    random.shuffle(shuffled)
                    st.session_state.teams = [shuffled[i:i+2] for i in range(0, len(shuffled), 2)]
                    st.session_state.current_team = st.session_state.teams[0]
                    st.session_state.queue = st.session_state.teams[1:]

            else:
                st.warning("‚ùó ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏∞‡∏Å‡πà‡∏≠‡∏ô ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏Å‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÑ‡∏î‡πâ")

    # ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
    st.subheader("üìä ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô")
    if st.session_state.history:
        for record in st.session_state.history[::-1]:
            st.write(f"‡πÅ‡∏°‡∏ï‡∏ä‡πå {record['‡πÅ‡∏°‡∏ï‡∏ä‡πå']}: üèÜ {record['‡∏ó‡∏µ‡∏°‡∏ä‡∏ô‡∏∞']} ‡∏ä‡∏ô‡∏∞ ‚ùå {record['‡∏ó‡∏µ‡∏°‡πÅ‡∏û‡πâ']}")
    else:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô")
